@page "/register"
@using BabySounds.Client.Services
@using BabySounds.Contracts.Requests
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Register</h1>

@if (_showErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in _errors)
        {
            <p>@error</p>
        }
    </div>
}

<div class="flex justify-center items-center h-screen bg-pink-700">
    <div class="max-w-sm w-full p-6 rounded shadow">
        <h5 class="text-2xl font-bold mt-8">Please enter your details</h5>
        <EditForm Model="_registerModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator/>
            <ValidationSummary class="mt-8"/>

            <div class="mt-8">
                <InputText Id="firstName" class="form-input mt-1 block w-full" @bind-Value="_registerModel.FirstName" placeholder="First Name"/>
                <ValidationMessage For="@(() => _registerModel.FirstName)" class="text-red-500"/>
            </div>
            <div class="mt-8">
                <InputText Id="username" class="form-input mt-1 block w-full" @bind-Value="_registerModel.UserName" placeholder="Username"/>
                <ValidationMessage For="@(() => _registerModel.UserName)" class="text-red-500"/>
            </div>
            <div class="mt-8">
                <InputText Id="email" class="form-input mt-1 block w-full" @bind-Value="_registerModel.Email" placeholder="Email address"/>
                <ValidationMessage For="@(() => _registerModel.Email)" class="text-red-500"/>
            </div>
            <div class="flex flex-row">
                <div class="mt-8">
                    <InputText Id="password" type="password" class="form-input mt-1 block w-full" @bind-Value="_registerModel.Password" placeholder="Password"/>
                    <ValidationMessage For="@(() => _registerModel.Password)" class="text-red-500"/>
                </div>
                <div class="mt-8">
                    <InputText Id="confirmPassword" type="password" class="form-input mt-1 block w-full" @bind-Value="_registerModel.ConfirmPassword" placeholder="Confirm Password"/>
                    <ValidationMessage For="@(() => _registerModel.ConfirmPassword)" class="text-red-500"/>
                </div>
            </div>

            <div class="flex items-center mt-8">
                <input type="checkbox" class="form-checkbox h-4 w-4 text-purple-600">
                <label for="agreements" class="ml-2 text-gray-700">I agree to the terms and conditions</label>
            </div>

            <button type="submit" class="btn btn-primary bg-purple-900 hover:bg-purple-800 text-white py-2 px-4 rounded">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private readonly RegisterRequest _registerModel = new()
    {
        FirstName = "",
        UserName = "",
        Email = "",
        Password = "",
        ConfirmPassword = ""
    };

    private bool _showErrors;
    private IEnumerable<string> _errors = new List<string>();

    private async Task HandleRegistration()
    {
        _showErrors = false;

        var response = await AuthService.Register(_registerModel);

        response.Switch(
            _ => NavigationManager.NavigateTo("/"),
            failure =>
            {
                _errors = failure.Select(x => x.Description);
                _showErrors = true;
            });
    }

}
